name: Tests

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  workflow_dispatch:

jobs:
  run:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, windows-2019, macos-latest]
        php-versions: ['7.4', '8.0']

    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}

    steps:
    - uses: actions/checkout@v1

    - name: Install PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: ${{ matrix.php-versions }}

    - name: Check PHP Version
      run: php -v

    - name: Download PHP Installer
      run: |
        php -r "copy('https://raw.githubusercontent.com/sabhyap/ton-client-php-ext/1.43.2/installer.php', 'installer.php');"
        php -r "if (hash_file('sha384', 'installer.php') === '03586e200bc1c87f000c5a0eea27aa688eb451a5b946579205ca918bbffda7234359e2d0e176aa53e841c6a77b8de959') { echo 'Installer verified'; } else { echo 'Installer corrupt'; } echo PHP_EOL;"
      
    - name: Install PHP Extension (Windows)
      if: matrix.operating-system == 'windows-2019'
      run: php installer.php -v 1.43.2

    - name: Install PHP Extension (Ubuntu/Mac)
      if: matrix.operating-system != 'windows-2019'
      run: sudo php installer.php -v 1.43.2

    - name: Test PHP Extension
      run: php installer.php -v 1.43.2 -T

    - name: Check PHP Extensions
      run: php -m

    - name: Check Composer Version
      run: composer -V

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Setup Environment (Ubuntu)
      if: matrix.operating-system == 'ubuntu-latest'
      run: |
        docker pull tonlabs/local-node
        docker run -d --name local-node -e USER_AGREEMENT=yes -p8888:80 tonlabs/local-node

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
    
    - name: Run test suite
      env:
        TON_NETWORK_ADDRESS: ${{ matrix.operating-system == 'ubuntu-latest' && 'http://localhost:8888' || '' }}
      run: composer test
